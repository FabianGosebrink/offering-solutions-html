<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>travisci on Fabian Gosebrink Angular and .NET Core Consulting, Training and Courses</title>
    <link>https://offering.solutions/tags/travisci/</link>
    <description>Recent content in travisci on Fabian Gosebrink Angular and .NET Core Consulting, Training and Courses</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Jun 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://offering.solutions/tags/travisci/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Running cypress tests in an Angular project with travis CI</title>
      <link>https://offering.solutions/blog/articles/2018/06/01/running-cypress-tests-in-an-angular-project-with-travis-ci/</link>
      <pubDate>Fri, 01 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2018/06/01/running-cypress-tests-in-an-angular-project-with-travis-ci/</guid>
      <description>In the last blog post I explained how to get started with cypress tests. The next step would be running these tests in a Continuous Integration and Continuous Delivery (CI and CD) environment. The advantage of this is that with every commit the tests are being executed automatically and you get feedback about wether your application is still doing good or not automatically.
Travis CI is a very well known Continuous Integration Environment and is very common when working with OSS projects.</description>
    </item>
    
  </channel>
</rss>
