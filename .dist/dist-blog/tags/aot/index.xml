<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>aot on Fabian Gosebrink Angular and .NET Core Consulting, Training and Courses</title>
    <link>https://offering.solutions/tags/aot/</link>
    <description>Recent content in aot on Fabian Gosebrink Angular and .NET Core Consulting, Training and Courses</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 08 Feb 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://offering.solutions/tags/aot/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Angular Ahead Of Time (AoT) compilation, lazy loading and treeshaking with webpack</title>
      <link>https://offering.solutions/blog/articles/2017/02/08/angular-ahead-of-time-aot-compilation-lazy-loading-and-treeshaking-with-webpack/</link>
      <pubDate>Wed, 08 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2017/02/08/angular-ahead-of-time-aot-compilation-lazy-loading-and-treeshaking-with-webpack/</guid>
      <description>In this blog post I want to show you how to get Ahead Of Time compilation enabled with lazy loading in combination with webpack 2.
Code Github - ASPNET-ASPNETCore-AngularJS-Angular
The Router If you want to enable lazy loading in your application with aot you first have to configure your router to load the module lazy - when it gets requested. You can do that with the loadChildren-attribute.
export const AppRoutes: Routes = [ // normal routes  { path: &amp;#39;food&amp;#39;, loadChildren: &amp;#39;.</description>
    </item>
    
  </channel>
</rss>
