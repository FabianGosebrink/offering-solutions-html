<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>angular on Fabian Gosebrink Angular and .NET Core Consulting, Training and Courses</title>
    <link>https://offering.solutions/tags/angular/</link>
    <description>Recent content in angular on Fabian Gosebrink Angular and .NET Core Consulting, Training and Courses</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://offering.solutions/tags/angular/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Angular Reactive Forms – Formulare Und Validierung Mit Angular Entwickeln</title>
      <link>https://offering.solutions/talks/angular-reactive-forms-formulare-und-validierung-mit-angular-entwickeln-1/</link>
      <pubDate>Thu, 25 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/angular-reactive-forms-formulare-und-validierung-mit-angular-entwickeln-1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Realtime Cross-Plattform-Applikationen Mit Angular, ASP.NET Core Und Signalr</title>
      <link>https://offering.solutions/talks/realtime-cross-plattform-applikationen-mit-angular-asp-net-core-und-signalr-2/</link>
      <pubDate>Tue, 16 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/realtime-cross-plattform-applikationen-mit-angular-asp-net-core-und-signalr-2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Using Auth0 in Angular with NgRx</title>
      <link>https://offering.solutions/blog/articles/2021/02/01/using-auth0-in-angular-with-ngrx/</link>
      <pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2021/02/01/using-auth0-in-angular-with-ngrx/</guid>
      <description>In this blog post I want to show how we can add Auth0 authentication into an Angular app when using state management with NgRx.
We are going to look how you can place authentication with Auth0 in an Angular app to provide a login and a logout and going a little beyond the incredibly good tutorial The Complete Guide to Angular User Authentication with Auth0. Also there is already a blog post I am happy to link to: NgRx Authentication Tutorial.</description>
    </item>
    
    <item>
      <title>Architecting Angular Applications with Angular Libraries</title>
      <link>https://offering.solutions/talks/architecting-angular-applications-with-angular-libraries-3/</link>
      <pubDate>Thu, 28 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/architecting-angular-applications-with-angular-libraries-3/</guid>
      <description></description>
    </item>
    
    <item>
      <title>End-to-End – Moderne Webanwendungen Mit Angular Und ASP.NET Core</title>
      <link>https://offering.solutions/talks/end-to-end-moderne-webanwendungen-mit-angular-und-asp-net-core-4/</link>
      <pubDate>Wed, 27 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/end-to-end-moderne-webanwendungen-mit-angular-und-asp-net-core-4/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Starting Angular Projects with Nx</title>
      <link>https://offering.solutions/blog/articles/2021/01/27/starting-angular-projects-with-nx/</link>
      <pubDate>Wed, 27 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2021/01/27/starting-angular-projects-with-nx/</guid>
      <description>In this blog post I want to write down one possible way to start and architecture Angular projects using the nx. I know that there are a lot of guides and even books out there but to have it written down in one place for me with all the current commands I am using building larger Angular applications I am creating this blog post.
TOC  Who is this article for?</description>
    </item>
    
    <item>
      <title>Enrich Your Angular App with Angular Forms</title>
      <link>https://offering.solutions/talks/enrich-your-angular-app-with-angular-forms-5/</link>
      <pubDate>Thu, 19 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/enrich-your-angular-app-with-angular-forms-5/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Angular Testing Made Easy with Jasmine, Karma and Cypress</title>
      <link>https://offering.solutions/talks/angular-testing-made-easy-with-jasmine-karma-and-cypress-6/</link>
      <pubDate>Wed, 28 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/angular-testing-made-easy-with-jasmine-karma-and-cypress-6/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Architecting Angular Applications with Angular Libraries</title>
      <link>https://offering.solutions/talks/architecting-angular-applications-with-angular-libraries-7/</link>
      <pubDate>Wed, 28 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/architecting-angular-applications-with-angular-libraries-7/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Architecting Angular Applications with Angular Libraries</title>
      <link>https://offering.solutions/talks/architecting-angular-applications-with-angular-libraries-8/</link>
      <pubDate>Sat, 17 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/architecting-angular-applications-with-angular-libraries-8/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Testing Using Angular</title>
      <link>https://offering.solutions/talks/testing-using-angular-9/</link>
      <pubDate>Tue, 13 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/testing-using-angular-9/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Statemanagement in Angular with Ngrx Stores &amp; Effects</title>
      <link>https://offering.solutions/talks/statemanagement-in-angular-with-ngrx-stores-effects-10/</link>
      <pubDate>Mon, 12 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/statemanagement-in-angular-with-ngrx-stores-effects-10/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Securing an Electron App Implemented with Angular Using OIDC and OAuth2</title>
      <link>https://offering.solutions/blog/articles/2020/10/06/securing-an-electron-app-implemented-with-angular-using-oidc-and-oauth2/</link>
      <pubDate>Tue, 06 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2020/10/06/securing-an-electron-app-implemented-with-angular-using-oidc-and-oauth2/</guid>
      <description>In this blog post I want to explain how you can secure an electron app written in Angular with OIDC and OAuth2 using IdentityServer4 as the Secure Token Server.
 This is kind of a follow up blog post of my previous one Securing a Cordova App Implemented with Angular Using OIDC and OAuth2
 TOC  Understanding the problem What we will use Configuring the authentication library Adding the authentication in the Angular App Catching the redirect in the electron main process Catching the event in the Angular app  Understanding the problem We are using the code flow to authenticate our application against the Secure Token Server (STS).</description>
    </item>
    
    <item>
      <title>Cross Platform Apps with Cordova, Electron and Angular</title>
      <link>https://offering.solutions/talks/cross-platform-apps-with-cordova-electron-and-angular-11/</link>
      <pubDate>Thu, 24 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/cross-platform-apps-with-cordova-electron-and-angular-11/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Securing a Cordova App Implemented with Angular Using OIDC and OAuth2</title>
      <link>https://offering.solutions/blog/articles/2020/09/17/securing-a-cordova-app-implemented-with-angular-using-oidc-and-oauth2/</link>
      <pubDate>Thu, 17 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2020/09/17/securing-a-cordova-app-implemented-with-angular-using-oidc-and-oauth2/</guid>
      <description>In this blog post I want to explain how you can secure a Cordova app written in Angular with OIDC and OAuth2 using IdentityServer4 as the Secure Token Server. We will take a look at an Angular project created with the AngularCLI or the NxDevTools and then turn it into a Cordova app via the Cordova CLI to let it run on the mobile phone and set everything up that we can authenticate to get an identity token and an access token and navigate back to our app to consume a protected API.</description>
    </item>
    
    <item>
      <title>Enrich Your Angular Apps with Angular Forms</title>
      <link>https://offering.solutions/talks/enrich-your-angular-apps-with-angular-forms-12/</link>
      <pubDate>Thu, 03 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/enrich-your-angular-apps-with-angular-forms-12/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Uploading Files to Azure Blob Storage with Angular and ASP.NET Core</title>
      <link>https://offering.solutions/blog/articles/2020/08/09/uploading-files-to-azure-blob-storage-with-angular-and-asp.net-core/</link>
      <pubDate>Sun, 09 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2020/08/09/uploading-files-to-azure-blob-storage-with-angular-and-asp.net-core/</guid>
      <description>In this blog post I want to show how to upload files from an Angular application over an ASP.NET Core WebAPI to an Azure Blob Storage and save them there. Using an Azure Blob Storage for this is a perfect candidate not to pollute your App Service and store files there but use a dedicated system for this. In this blog post we will see how we can create the Azure Blob Storage in the Azure Portal, add the appropriate services into an ASP.</description>
    </item>
    
    <item>
      <title>Architecting Angular Applications with Angular Libraries</title>
      <link>https://offering.solutions/talks/architecting-angular-applications-with-angular-libraries-13/</link>
      <pubDate>Wed, 15 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/architecting-angular-applications-with-angular-libraries-13/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Authentication in Angular with NgRx and ASP.NET Core</title>
      <link>https://offering.solutions/blog/articles/2020/05/29/authentication-in-angular-with-ngrx-and-asp.net-core/</link>
      <pubDate>Fri, 29 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2020/05/29/authentication-in-angular-with-ngrx-and-asp.net-core/</guid>
      <description>In this blog post I want to describe how you can add authentication and authorization in your Angular app using NgRx. We are using an ASP.NET Core backend to get our secure data from and a custom STS which we use for the authentication and the id token as well as an access token.
This is a follow up post of Authentication and Authorization with Angular and ASP.NET Core using OIDC and OAuth2 so if you want to get into the complete setup you might give this blog post a shot first :-) We will build this one up on the app which was mentioned in the references blog post.</description>
    </item>
    
    <item>
      <title>Authentication and Authorization with Angular and ASP.NET Core using OIDC and OAuth2</title>
      <link>https://offering.solutions/blog/articles/2020/05/18/authentication-and-authorization-with-angular-and-asp.net-core-using-oidc-and-oauth2/</link>
      <pubDate>Mon, 18 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2020/05/18/authentication-and-authorization-with-angular-and-asp.net-core-using-oidc-and-oauth2/</guid>
      <description>In this blog post I want to describe how you can add a login to your Angular App and secure it with OpenID Connect (OIDC) and OAuth2 to access an ASP.NET Core WebAPI with an Identity Server.
Code can be found here Angular OAuth2 OIDC Sample with ASP.NET Core
 Disclaimer: In this blog we will use an Angular library which I wrote some parts of. But the principles are best practice and uses a standard which can be applied to any Angular application no matter what libraries you use.</description>
    </item>
    
    <item>
      <title>Cross Field Validation Using Angular Reactive Forms</title>
      <link>https://offering.solutions/blog/articles/2020/05/03/cross-field-validation-using-angular-reactive-forms/</link>
      <pubDate>Sun, 03 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2020/05/03/cross-field-validation-using-angular-reactive-forms/</guid>
      <description>In this blog post I would like to describe how you can add validation to multiple fields of your reactive forms in Angular by using a feature called Cross Field Validation.
This powerful features let you validate not a single form control but instead you can validate one form control against the value from another control. Let us see how we can do this.
The source code is of course on Github and you can copy paste the examples along: Github</description>
    </item>
    
    <item>
      <title>Implement endless scroll with Angular, NgRx and ASP.NET Core WebAPI</title>
      <link>https://offering.solutions/blog/articles/2020/04/10/implement-endless-scroll-with-angular-ngrx-and-asp.net-core-webapi/</link>
      <pubDate>Fri, 10 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2020/04/10/implement-endless-scroll-with-angular-ngrx-and-asp.net-core-webapi/</guid>
      <description>In this blog post I want to show how you can implement an endless scroll feature with Angular, Ngrx and ASP.NET Core in the backend.
All the code in the repository is only for demo purposes. It shows the concepts however and I hope you can use it in your apps!
Code is here https://github.com/FabianGosebrink/angular-ngrx-endlessscroll
Creating the ASP.NET Core backend For the backend we need an ASP.NET Core WebAPI returning a large array of Items in this case.</description>
    </item>
    
    <item>
      <title>Migrating an Nx Workspace from Karma to Jest</title>
      <link>https://offering.solutions/blog/articles/2020/03/04/migrating-an-nx-workspace-from-karma-to-jest/</link>
      <pubDate>Wed, 04 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2020/03/04/migrating-an-nx-workspace-from-karma-to-jest/</guid>
      <description>In this article I want to describe how we can migrate an nx workspace with an angular application from karma to use jest, the test runner from facebook.
TL;DR  Switch packages in package.json Modify angular.json (test section &amp;amp; at the bottom) Replace karma.conf.js with jest.config.js on root level Replace content of tsconfig.spec.json in app folder Replace karma.conf.js with jest.config.js on app level Replace test.ts with test-setup.ts on app level  Details We will work with this workspace in this article:</description>
    </item>
    
    <item>
      <title>Erstellen Von Modernen Web-Apis Mit ASP.NET Core 3</title>
      <link>https://offering.solutions/talks/erstellen-von-modernen-web-apis-mit-asp-net-core-3-14/</link>
      <pubDate>Tue, 25 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/erstellen-von-modernen-web-apis-mit-asp-net-core-3-14/</guid>
      <description></description>
    </item>
    
    <item>
      <title>NgGirls in Zürich</title>
      <link>https://offering.solutions/blog/articles/2020/01/11/nggirls-in-z%C3%BCrich/</link>
      <pubDate>Sat, 11 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2020/01/11/nggirls-in-z%C3%BCrich/</guid>
      <description>In this article I want to present the first NgGirls of 2020 in Zürich, Switzerland!
I am very happy to announce ngGirls in Zürich at the 21st of February 2020 at the Google Europaallee F – Europaallee 36, 8004 Zurich. The workshop is only for woman and free of charge. So you can apply the form and ou are onboard.
Please check out other information at https://ng-girls.org/zurich-2020/
 08:00 - 08:30 - check in08:30 - 09:00 - opening lecture: introduction to ngGirls09:00 - 12:00 - Workshop start: hands on12:00 - 13:00 - lunch break13:00 - 17:00 - continue coding17:30 - 18:00 - closing lecture and goodbye</description>
    </item>
    
    <item>
      <title>Configuring Angular libraries</title>
      <link>https://offering.solutions/blog/articles/2019/12/31/configuring-angular-libraries/</link>
      <pubDate>Tue, 31 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2019/12/31/configuring-angular-libraries/</guid>
      <description>In this article I want to explain two possible ways to configure Angular libraries.
With libraries we have a convenient way to separate logic which is used multiple times across more than one application or libraries can define our architecture especially when working with a monorepo.
Libraries build a standalone codebase where complete modules with all its services, components etc. can be stored away and can be included into your Angular app.</description>
    </item>
    
    <item>
      <title>Better Angular Architectures with Libraries</title>
      <link>https://offering.solutions/talks/better-angular-architectures-with-libraries-15/</link>
      <pubDate>Wed, 27 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/better-angular-architectures-with-libraries-15/</guid>
      <description></description>
    </item>
    
    <item>
      <title>End-to-End - Distributed Systems with ASP.NET Core and Angular - Workshop</title>
      <link>https://offering.solutions/talks/end-to-end-distributed-systems-with-asp-net-core-and-angular-workshop-16/</link>
      <pubDate>Mon, 25 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/end-to-end-distributed-systems-with-asp-net-core-and-angular-workshop-16/</guid>
      <description></description>
    </item>
    
    <item>
      <title>End-to-End - Real Time Messaging with Angular and ASP.NET Core Signalr</title>
      <link>https://offering.solutions/talks/end-to-end-real-time-messaging-with-angular-and-asp-net-core-signalr-17/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/end-to-end-real-time-messaging-with-angular-and-asp-net-core-signalr-17/</guid>
      <description></description>
    </item>
    
    <item>
      <title>End-to-End - Distributed Systems with ASP.NET Core and Angular - Workshop</title>
      <link>https://offering.solutions/talks/end-to-end-distributed-systems-with-asp-net-core-and-angular-workshop-18/</link>
      <pubDate>Wed, 20 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/end-to-end-distributed-systems-with-asp-net-core-and-angular-workshop-18/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Real Time Messaging with Angular and ASP.NET Core Signalr</title>
      <link>https://offering.solutions/talks/real-time-messaging-with-angular-and-asp-net-core-signalr-19/</link>
      <pubDate>Sun, 27 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/real-time-messaging-with-angular-and-asp-net-core-signalr-19/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Professional Angular Architectures with Angular Libraries</title>
      <link>https://offering.solutions/talks/professional-angular-architectures-with-angular-libraries-20/</link>
      <pubDate>Wed, 23 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/professional-angular-architectures-with-angular-libraries-20/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Statemanagement in Angular with Ngrx Stores &amp; Effects Workshop</title>
      <link>https://offering.solutions/talks/statemanagement-in-angular-with-ngrx-stores-effects-workshop-21/</link>
      <pubDate>Wed, 16 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/statemanagement-in-angular-with-ngrx-stores-effects-workshop-21/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Angular Architectures with Angular Libraries</title>
      <link>https://offering.solutions/talks/angular-architectures-with-angular-libraries-23/</link>
      <pubDate>Tue, 15 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/angular-architectures-with-angular-libraries-23/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Mobile &amp; Desktop- Cross-Platform with Electron and Cordova</title>
      <link>https://offering.solutions/talks/mobile-desktop-cross-platform-with-electron-and-cordova-22/</link>
      <pubDate>Tue, 15 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/mobile-desktop-cross-platform-with-electron-and-cordova-22/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Testing Made Easy</title>
      <link>https://offering.solutions/talks/testing-made-easy-24/</link>
      <pubDate>Wed, 09 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/testing-made-easy-24/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Architecting Angular Apps with Angular Libraries</title>
      <link>https://offering.solutions/talks/architecting-angular-apps-with-angular-libraries-25/</link>
      <pubDate>Mon, 07 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/architecting-angular-apps-with-angular-libraries-25/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Mobile and Desktop Cross-Plattform with Electron Und Cordova - an Introduction</title>
      <link>https://offering.solutions/talks/mobile-and-desktop-cross-plattform-with-electron-und-cordova-an-introduction-27/</link>
      <pubDate>Wed, 25 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/mobile-and-desktop-cross-plattform-with-electron-und-cordova-an-introduction-27/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Updating your angular app to NgRx 8</title>
      <link>https://offering.solutions/blog/articles/2019/07/01/updating-your-angular-app-to-ngrx-8/</link>
      <pubDate>Mon, 01 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2019/07/01/updating-your-angular-app-to-ngrx-8/</guid>
      <description>In this blog post I want to describe how I updated an Angular Project using ngrx to the latest version ngrx 8.
Github: angular-ngrx-todo
You can find the complete update commit here : angular-ngrx-todo update commit
 Preparations Updating the actions Updating the effects Updating the reducer Updating the components  Preparations I started updating the project with update.angular.io and came to update the store with
ng update @ngrx/store This will lift your version of @ngrx/store and @ngrx/effects to version 8</description>
    </item>
    
    <item>
      <title>Creating Realtime Cross-Platform Applications with Angular, ASP.NET Core &amp; Signalr</title>
      <link>https://offering.solutions/talks/creating-realtime-cross-platform-applications-with-angular-asp-net-core-signalr-28/</link>
      <pubDate>Tue, 25 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/creating-realtime-cross-platform-applications-with-angular-asp-net-core-signalr-28/</guid>
      <description></description>
    </item>
    
    <item>
      <title>State Management in Angular with Ngrx Stores and Effects</title>
      <link>https://offering.solutions/talks/state-management-in-angular-with-ngrx-stores-and-effects-30/</link>
      <pubDate>Tue, 14 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/state-management-in-angular-with-ngrx-stores-and-effects-30/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Announcing First Pluralsight Course About Angular Libraries</title>
      <link>https://offering.solutions/blog/articles/2019/04/26/announcing-first-pluralsight-course-about-angular-libraries/</link>
      <pubDate>Fri, 26 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2019/04/26/announcing-first-pluralsight-course-about-angular-libraries/</guid>
      <description>In this blog post I want to announce my very first Pluralsight course &amp;ldquo;Structuring Angular Applications with Angular Libraries&amp;rdquo;
TL;DR I created my first Pluralsight course which is available here : Structuring Angular Applications with Angular Libraries with a corresponding GitHub Repository here https://github.com/FabianGosebrink/angular-libraries
Links   https://www.pluralsight.com/courses/structuring-angular-applications-angular-libraries
  https://github.com/FabianGosebrink/angular-libraries
  Preparation It was quite empty here for a while because at the end of last year I got accepted as a Pluralsight author and I got the chance to start my very first course.</description>
    </item>
    
    <item>
      <title>Javascript Testing Leicht Gemacht Am Beispiel Von Angular</title>
      <link>https://offering.solutions/talks/javascript-testing-leicht-gemacht-am-beispiel-von-angular-31/</link>
      <pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/javascript-testing-leicht-gemacht-am-beispiel-von-angular-31/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Refactoring Container Components to Fetch Data With Route Resolvers</title>
      <link>https://offering.solutions/blog/articles/2019/02/27/refactoring-container-components-to-fetch-data-with-route-resolvers/</link>
      <pubDate>Wed, 27 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2019/02/27/refactoring-container-components-to-fetch-data-with-route-resolvers/</guid>
      <description>In this blog post I want to show an alternative way to provide data in a common container &amp;amp; presentational components relation inside an Angular application.
Content  Container and presentational components Sample application on Github Displaying data without route resolvers Displaying data with route resolvers Showing loading indicator when data gets resolved  Container and presentational components In an Angular application we try to separate our components to container and presentational components as much as we can.</description>
    </item>
    
    <item>
      <title>Online and Offline Sync with Angular and IndexedDb</title>
      <link>https://offering.solutions/blog/articles/2018/11/21/online-and-offline-sync-with-angular-and-indexeddb/</link>
      <pubDate>Wed, 21 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2018/11/21/online-and-offline-sync-with-angular-and-indexeddb/</guid>
      <description>In this blog post I want to describe how to develop a todo application which stores the items in the IndexedDb and synchronises it later if the app gets back online.
After this blog post you should have an example how to use the IndexedDb in your applications, how to register to the online and offline commands and send items if the event comes up.
The code to this blog post can be found here https://github.</description>
    </item>
    
    <item>
      <title>Echte Cross-Plattform-Anwendungen Mit Cordova, Electron Und Angular</title>
      <link>https://offering.solutions/talks/echte-cross-plattform-anwendungen-mit-cordova-electron-und-angular-32/</link>
      <pubDate>Thu, 27 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/echte-cross-plattform-anwendungen-mit-cordova-electron-und-angular-32/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Using UseClass, UseFactory, UseValue &amp; UseExisting with treeshakable providers in Angular</title>
      <link>https://offering.solutions/blog/articles/2018/08/17/using-useclass-usefactory-usevalue-useexisting-with-treeshakable-providers-in-angular/</link>
      <pubDate>Fri, 17 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2018/08/17/using-useclass-usefactory-usevalue-useexisting-with-treeshakable-providers-in-angular/</guid>
      <description>In this blog post I want to describe how to use the useClass, useValue, useFactory, useExisting providers in the new treeshakable providers from Angular.
After this blog post you should have an example how to use those four providers and have an idea what to do with it in case they are a solution to some problems you might face when developing Angular applications.
Introduction Everybody is talking about the providedIn property of the configuration object which can be passed to the Injectable() decorator of the Angular services.</description>
    </item>
    
    <item>
      <title>Announcing &#39;Getting started with Angular and ASP.NET Core&#39; blog post for ng book</title>
      <link>https://offering.solutions/blog/articles/2018/08/09/announcing-getting-started-with-angular-and-asp.net-core-blog-post-for-ng-book/</link>
      <pubDate>Thu, 09 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2018/08/09/announcing-getting-started-with-angular-and-asp.net-core-blog-post-for-ng-book/</guid>
      <description>I wanted to announce another blog post I wrote for the famous &amp;ldquo;ng-book&amp;rdquo; called &amp;ldquo;Getting started with Angular and ASP.NET Core&amp;rdquo; and you can find it here
Some time ago Nate Murray contacted me asking if I would be willing to write a blog post for ng book which he can publish over the NgNewsletter. I immediatelly said &amp;ldquo;Yes&amp;rdquo; and began to write about my favorite topics &amp;ldquo;Angular&amp;rdquo; and &amp;ldquo;ASP.NET Core&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Running cypress tests in an Angular project with travis CI</title>
      <link>https://offering.solutions/blog/articles/2018/06/01/running-cypress-tests-in-an-angular-project-with-travis-ci/</link>
      <pubDate>Fri, 01 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2018/06/01/running-cypress-tests-in-an-angular-project-with-travis-ci/</guid>
      <description>In the last blog post I explained how to get started with cypress tests. The next step would be running these tests in a Continuous Integration and Continuous Delivery (CI and CD) environment. The advantage of this is that with every commit the tests are being executed automatically and you get feedback about wether your application is still doing good or not automatically.
Travis CI is a very well known Continuous Integration Environment and is very common when working with OSS projects.</description>
    </item>
    
    <item>
      <title>Start your end to end testing with Angular and Cypress</title>
      <link>https://offering.solutions/blog/articles/2018/05/27/start-your-end-to-end-testing-with-angular-and-cypress/</link>
      <pubDate>Sun, 27 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2018/05/27/start-your-end-to-end-testing-with-angular-and-cypress/</guid>
      <description>In this blog post we will cover how to get started with end to end testing using cypress and angular and the AngularCLI.
The code for this blog post can be found here
As a long term AngularCLI user I am very used to work with protractor when it comes to end to end testing. To be honest I did not like end to end testing that much. So I was looking for an alternative and this tweet from Dominic Elm pushed me more into the direction of cypress.</description>
    </item>
    
    <item>
      <title>Starting with Angular and Microsoft&#39;s Face Recognition API</title>
      <link>https://offering.solutions/blog/articles/2018/04/23/starting-with-angular-and-microsofts-face-recognition-api/</link>
      <pubDate>Mon, 23 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2018/04/23/starting-with-angular-and-microsofts-face-recognition-api/</guid>
      <description>In this blog post I want to give you a guidance to the first steps of starting with Microsoft&amp;rsquo;s Face Recognition API and using it with Angular and the Angular CLI.
Preparation The first thing you need is a FaceAPI key which you can get here FaceAPI. You can login with your Microsoft, LinkedIn, GitHub or Facebook account to get one.
Another useful links are:
 Obtaining Subscription Keys Face API JavaScript Quickstarts Api Documentation - Face API - V1.</description>
    </item>
    
    <item>
      <title>Angular Testing Made Easy</title>
      <link>https://offering.solutions/talks/angular-testing-made-easy-36/</link>
      <pubDate>Wed, 21 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/angular-testing-made-easy-36/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Create a build pipeline for Angular and ASP.NET Core apps with Visual Studio Team Services</title>
      <link>https://offering.solutions/blog/articles/2018/03/08/create-a-build-pipeline-for-angular-and-asp.net-core-apps-with-visual-studio-team-services/</link>
      <pubDate>Thu, 08 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2018/03/08/create-a-build-pipeline-for-angular-and-asp.net-core-apps-with-visual-studio-team-services/</guid>
      <description>In this blog post I want to describe how you can build up a build and release pipeline for your Angular and ASP.NET Core applications using Visual Studio Team Services.
Preparation First of all you need an user account with which you can login to &amp;lt;yourname&amp;gt;.visualstudio.com. Then we will need a github repository where your project is checked in. As an example I will take the repository located on https://github.com/FabianGosebrink/ASPNETCore-Angular-Ngrx. The repository has the client and the server code completely seperated which makes it easy for us to switch technologies or to keep things seperated like we will do it with our build and release pipelines in Visual Studio Team Services (VSTS).</description>
    </item>
    
    <item>
      <title>Separating state into angular modules with ngrx</title>
      <link>https://offering.solutions/blog/articles/2018/02/10/separating-state-into-angular-modules-with-ngrx/</link>
      <pubDate>Sat, 10 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2018/02/10/separating-state-into-angular-modules-with-ngrx/</guid>
      <description>In this blog post I want to give you an explanation of the state tree of ngrx if you are working with a state and how to separate it into different modules.
In this blog  One state for your entire application with forRoot(&amp;hellip;) Separating state into modules with forFeature(&amp;hellip;) Conclusion  If you are building smaller or large angular applications you will sooner or later face the problem to manage the state of your application.</description>
    </item>
    
    <item>
      <title>CRUD operations in Angular with ASP.NET Core and HATEOAS</title>
      <link>https://offering.solutions/blog/articles/2017/11/29/crud-operations-in-angular-with-asp.net-core-and-hateoas/</link>
      <pubDate>Wed, 29 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2017/11/29/crud-operations-in-angular-with-asp.net-core-and-hateoas/</guid>
      <description>This blog post shows how to implement CRUD operations in Angular which are driven by an ASP.NET Core Web API using HATEOAS.
A quick note The HATEOAS in this repository does not follow any &amp;ldquo;standard&amp;rdquo; like e.g. HAL. But it is enough that you get the idea and an impression how to use it.
I played around a little bit with this in the last time and maybe you can get some inspiration of how to get stuff going with that in your project.</description>
    </item>
    
    <item>
      <title>Using the Angular Material Paginator with ASP.NET Core and Angular</title>
      <link>https://offering.solutions/blog/articles/2017/11/21/using-the-angular-material-paginator-with-asp.net-core-and-angular/</link>
      <pubDate>Tue, 21 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2017/11/21/using-the-angular-material-paginator-with-asp.net-core-and-angular/</guid>
      <description>In this blog post I want to show you how to use Angular Material with Angular to use a table with paging which is driven by an ASP.NET Core WebAPI.
Code You can find the code here: https://github.com/FabianGosebrink/ASPNETCore-Angular-Material-HATEOAS-Paging
Overview  What is HATEOAS The Backend  Customer Controller   The Frontend  PaginationService HttpBaseService The Components Include in module ListComponent OverviewComponent   Links  Get started With the Angular Material Table and its Pagination Module it is quite easy to set up paging in a beautiful way so that you can use it on client side and only show a specific amount of entries to your users.</description>
    </item>
    
    <item>
      <title>Angular Testing Von a Bis Z</title>
      <link>https://offering.solutions/talks/angular-testing-von-a-bis-z-41/</link>
      <pubDate>Wed, 11 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/angular-testing-von-a-bis-z-41/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Testing an Angular Http Service</title>
      <link>https://offering.solutions/blog/articles/2017/10/02/testing-an-angular-http-service/</link>
      <pubDate>Mon, 02 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2017/10/02/testing-an-angular-http-service/</guid>
      <description>In this blog post I want to show you how you can test the new HttpClient introduced with the version 4.2 of angular.
The HttpClient service Lets take this service as a reference
import { HttpClient } from &amp;#39;@angular/common/http&amp;#39;; import { Injectable } from &amp;#39;@angular/core&amp;#39;; @Injectable() export class CustomHttpService { constructor(private httpClient: HttpClient) { } getSingle&amp;lt;T&amp;gt;(id: number) { return this.httpClient.get&amp;lt;T&amp;gt;(`http://replace.with.api/anything/${id}`); } post&amp;lt;T&amp;gt;(item: any) { return this.httpClient.post&amp;lt;T&amp;gt;(`http://replace.with.api/anything`, item); } put&amp;lt;T&amp;gt;(id: number, item: any) { return this.</description>
    </item>
    
    <item>
      <title>Fenster Überall- Desktopanwendungen Mit Angular Und Electron</title>
      <link>https://offering.solutions/talks/fenster-ueberall-desktopanwendungen-mit-angular-und-electron-42/</link>
      <pubDate>Thu, 28 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/fenster-ueberall-desktopanwendungen-mit-angular-und-electron-42/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Webentwicklung Mit ASP.NET Core Webapi &amp; Angular</title>
      <link>https://offering.solutions/talks/webentwicklung-mit-asp-net-core-webapi-angular-43/</link>
      <pubDate>Tue, 19 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/webentwicklung-mit-asp-net-core-webapi-angular-43/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Angular - New HTTP interface with interceptors</title>
      <link>https://offering.solutions/blog/articles/2017/07/19/angular-new-http-interface-with-interceptors/</link>
      <pubDate>Wed, 19 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2017/07/19/angular-new-http-interface-with-interceptors/</guid>
      <description>In this blog post I want to explore the latest HTTP interface from angular which was introduced in Angular 4.3.
We all need to get our data from any source, mostly this is done via HTTP and any REST backend (like node or ASP.NET Core etc.) or even from files in the *.json format. However, this was possible ever since and is one of the key features of an SPA but Angular introduced a improved version of the HTTP Api in version 4.</description>
    </item>
    
    <item>
      <title>Lessons learnt from organizing a conference</title>
      <link>https://offering.solutions/blog/articles/2017/07/18/lessons-learnt-from-organizing-a-conference/</link>
      <pubDate>Tue, 18 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2017/07/18/lessons-learnt-from-organizing-a-conference/</guid>
      <description>It has been quiet here for a while&amp;hellip; :-)
You may have noticed that I organised my first conference .NET Dayabout two months ago. Well, that is not true. The organisation itself took place long before that but the event took place approximately two months ago. With this distance of time I want to gather up what I learned from organising this event, what I take with me and what will influence the next conference if I will do this again some time :-)</description>
    </item>
    
    <item>
      <title>Businessanwendungen Für Jedes System Mit ASP.NET Core Und Angular</title>
      <link>https://offering.solutions/talks/businessanwendungen-fuer-jedes-system-mit-asp-net-core-und-angular-45/</link>
      <pubDate>Tue, 23 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/businessanwendungen-fuer-jedes-system-mit-asp-net-core-und-angular-45/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Angular Mit ASP.NET Core Webapi</title>
      <link>https://offering.solutions/talks/angular-mit-asp-net-core-webapi-46/</link>
      <pubDate>Tue, 25 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/angular-mit-asp-net-core-webapi-46/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Announcing the .NET Day 2017</title>
      <link>https://offering.solutions/blog/articles/2017/04/02/announcing-the-.net-day-2017/</link>
      <pubDate>Sun, 02 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2017/04/02/announcing-the-.net-day-2017/</guid>
      <description>I am very happy to announce the .NET Day 2017 in Switzerland! In this blog post I want to give you a small background information on this, how this idea came up and about the current status.
The beginning The idea of this conference day came into my mind in the middle of 2016. I love conferences. I think that a developer has to stay updated on his well known topics as well as be open to new topics and has to keep on learning over and over again.</description>
    </item>
    
    <item>
      <title>Angular and C# .Net as Backend</title>
      <link>https://offering.solutions/talks/angular-and-c-net-as-backend-48/</link>
      <pubDate>Tue, 28 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/angular-and-c-net-as-backend-48/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Moving your Angular application from SystemJS to Webpack</title>
      <link>https://offering.solutions/blog/articles/2017/02/26/moving-your-angular-application-from-systemjs-to-webpack/</link>
      <pubDate>Sun, 26 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2017/02/26/moving-your-angular-application-from-systemjs-to-webpack/</guid>
      <description>In this blog post I want to show you how you can move from an existing Angular application using systemjs to an application with webpack.
Imagine the following application.
app├── // modules, components and so on├── app.component.ts├── app.component.html├── app.module.ts└── main.ts...systemjs.config.jstsconfig.jsontslint.json...Because we want to get away from systemjs here we will first introduce a webpack.config.js which holds your configuration and which can handle all you files and stuff.</description>
    </item>
    
    <item>
      <title>Angular Ahead Of Time (AoT) compilation, lazy loading and treeshaking with webpack</title>
      <link>https://offering.solutions/blog/articles/2017/02/08/angular-ahead-of-time-aot-compilation-lazy-loading-and-treeshaking-with-webpack/</link>
      <pubDate>Wed, 08 Feb 2017 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2017/02/08/angular-ahead-of-time-aot-compilation-lazy-loading-and-treeshaking-with-webpack/</guid>
      <description>In this blog post I want to show you how to get Ahead Of Time compilation enabled with lazy loading in combination with webpack 2.
Code Github - ASPNET-ASPNETCore-AngularJS-Angular
The Router If you want to enable lazy loading in your application with aot you first have to configure your router to load the module lazy - when it gets requested. You can do that with the loadChildren-attribute.
export const AppRoutes: Routes = [ // normal routes  { path: &amp;#39;food&amp;#39;, loadChildren: &amp;#39;.</description>
    </item>
    
    <item>
      <title>ASP.NET Core &amp; Angular in Business Applications</title>
      <link>https://offering.solutions/talks/asp-net-core-angular-in-business-applications-49/</link>
      <pubDate>Tue, 31 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/asp-net-core-angular-in-business-applications-49/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Moderne Webentwicklung Mit Component Based Design</title>
      <link>https://offering.solutions/talks/moderne-webentwicklung-mit-component-based-design-50/</link>
      <pubDate>Tue, 17 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/moderne-webentwicklung-mit-component-based-design-50/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Working with Angular Template Forms</title>
      <link>https://offering.solutions/blog/articles/2017/01/14/working-with-angular-template-forms/</link>
      <pubDate>Sat, 14 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2017/01/14/working-with-angular-template-forms/</guid>
      <description>In this blog I want explain and show you how to work with Angular&amp;rsquo;s template driven forms.
The Problem I was recently giving an Angular course to awesome people and I noticed that working with Angular forms seems to be one of the most complicated things in Angular.
The Situation We will start with an Angular application which has a structure like this:
app├── app.component.ts├── app.component.html├── form.component.ts├── form.</description>
    </item>
    
    <item>
      <title>How to implement a table filter in Angular</title>
      <link>https://offering.solutions/blog/articles/2016/11/21/how-to-implement-a-table-filter-in-angular/</link>
      <pubDate>Mon, 21 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2016/11/21/how-to-implement-a-table-filter-in-angular/</guid>
      <description>In this post I want to show you how to implement a table filter in Angular.
 NOTE: Keep in mind that this only filters the client side values meaning the values you already loaded to the client! Filtering should maybe be a server side thing when you only call the data you really want, sending a request to your API with the term you want to filter your resources on right on the DB.</description>
    </item>
    
    <item>
      <title>How to debug an Angular application with Chrome and VS Code</title>
      <link>https://offering.solutions/blog/articles/2016/10/16/how-to-debug-an-angular-application-with-chrome-and-vs-code/</link>
      <pubDate>Sun, 16 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2016/10/16/how-to-debug-an-angular-application-with-chrome-and-vs-code/</guid>
      <description>In this blog post I want to show you how to debug an Angular application with Chrome and VS Code.
First of all you need to install the extension in VS Code.
You can find it here
https://github.com/Microsoft/vscode-chrome-debug
or search in the extensions tab for the plugin directly:
After installing you probably have to enable the plugin and restart VS Code but in the end you will see your folder structure like normal.</description>
    </item>
    
    <item>
      <title>Cross Platform Builds with Angular, Gulp and Webpack</title>
      <link>https://offering.solutions/blog/articles/2016/06/17/cross-platform-builds-with-angular-gulp-and-webpack/</link>
      <pubDate>Fri, 17 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2016/06/17/cross-platform-builds-with-angular-gulp-and-webpack/</guid>
      <description>In this blog post I want to show how to create Cross Platform Builds with Angular, Gulp and Webpack
WebpackGulpAngularCode can be found here: https://github.com/FabianGosebrink/Foodchooser-ASPNET-Angular-Cross-Platform
Setting up the folder structure The folder structure is very important but also one of the most discussed in the internet I think ;). Mine looks like the following:
Whereas &amp;ldquo;app&amp;rdquo; contains my Angular 2 application and the other files and folders speak for theirselves.</description>
    </item>
    
    <item>
      <title>ASP.NET Core and Angular with Webpack and Visual Studio</title>
      <link>https://offering.solutions/blog/articles/2016/06/12/asp.net-core-and-angular-with-webpack-and-visual-studio/</link>
      <pubDate>Sun, 12 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2016/06/12/asp.net-core-and-angular-with-webpack-and-visual-studio/</guid>
      <description>This article shows how to use ASP.NET Core and Angular with webpack and Visual Studio. Both the client and the server side of the application is implemented inside one ASP.NET Core project which makes it easier to deploy.
Code: https://github.com/damienbod/Angular2WebpackVisualStudio
Authors Fabian Gosebrink, Damien Bowden. This post is hosted on both http://damienbod.com and http://offering.solutions/.
Setting up the application
The ASP.NET Core application contains both the server side API services and also hosts the Angular 2 client application.</description>
    </item>
    
    <item>
      <title>Webentwicklung Mit Angular Und ASP.NET Core</title>
      <link>https://offering.solutions/talks/webentwicklung-mit-angular-und-asp-net-core-52/</link>
      <pubDate>Thu, 02 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/webentwicklung-mit-angular-und-asp-net-core-52/</guid>
      <description></description>
    </item>
    
    <item>
      <title>How you can organise gulp in your applications</title>
      <link>https://offering.solutions/blog/articles/2016/05/16/how-you-can-organise-gulp-in-your-applications/</link>
      <pubDate>Mon, 16 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2016/05/16/how-you-can-organise-gulp-in-your-applications/</guid>
      <description>In this blog post I want to show one possibility of organising your gulp tasks in a way that you as a developer can find them quickly and print them to the console in an ordered way.
 I have taken all these examples from my cross platform examples on GitHub. Especially from Foodchooser.
 Motivation No matter what you do with web development today you will have to have a task runner when it comes to distribute to a customer at the latest.</description>
    </item>
    
    <item>
      <title>Writing custom validators in Angular</title>
      <link>https://offering.solutions/blog/articles/2016/05/10/writing-custom-validators-in-angular/</link>
      <pubDate>Tue, 10 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2016/05/10/writing-custom-validators-in-angular/</guid>
      <description>In this blog post I want to show you how you are writing custom validators in Angular.
https://github.com/OfferingSolutions/Offering-Solutions-Angular-Course/tree/master/Angular-Course/09_Forms/end/app/validators
 Updated to new Syntax
 When dealing with forms in Angular you can use the build-in validators like: required, minLength or maxLength, pattern&amp;hellip; . Sooner or later you need a custom validator fulfilling a special validation.
Let&amp;rsquo;s have a form first:
&amp;lt;form #f=&amp;#34;ngForm&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;form-group&amp;#34;&amp;gt; &amp;lt;label for=&amp;#34;calories&amp;#34;&amp;gt;Calories&amp;lt;/label&amp;gt; &amp;lt;input type=&amp;#34;text&amp;#34; class=&amp;#34;form-control&amp;#34; id=&amp;#34;calories&amp;#34; placeholder=&amp;#34;Calories&amp;#34; [(ngModel)]=&amp;#34;foodItem.</description>
    </item>
    
    <item>
      <title>Angular, ASP.NET WebAPI, Azure &amp; Cordova, Cross Platform – My Private Hackathon Part 2</title>
      <link>https://offering.solutions/blog/articles/2016/04/26/angular-asp.net-webapi-azure-cordova-cross-platform-my-private-hackathon-part-2/</link>
      <pubDate>Tue, 26 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2016/04/26/angular-asp.net-webapi-azure-cordova-cross-platform-my-private-hackathon-part-2/</guid>
      <description>In the last blog postI lost a few words about the REST-API the FoodChooser is talking to. In this blog I want to talk about the clients I developed. This is: Angular, ASP.NET WebAPI, Azure &amp;amp; Cordova, Cross Platform – My Private Hackathon Part 2.
Well I started coding an AngularJs 1.x Client with Typecript which is available here
https://github.com/FabianGosebrink/ASPNET-Foodchooser-Cross-Platform-AngularJS
Of course I could not stop looking and digging into Angular.</description>
    </item>
    
    <item>
      <title>Angular, ASP.NET WebAPI, Azure &amp; Cordova, Cross Platform – My Private Hackathon Part 1</title>
      <link>https://offering.solutions/blog/articles/2016/04/19/angular-asp.net-webapi-azure-cordova-cross-platform-my-private-hackathon-part-1/</link>
      <pubDate>Tue, 19 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2016/04/19/angular-asp.net-webapi-azure-cordova-cross-platform-my-private-hackathon-part-1/</guid>
      <description>Motivation I had a few free hours and was curious and wanted to know what you can achieve in 9 hours of coding. Due to the fact that I am very into ASP.NET development with Angular I coded a small application which is based on ASP.NET Web API, AngularJs/Angular2 with Typescript &amp;amp; co. So the question is: How far will I go in 9 hours? This is my private Hackathon!!</description>
    </item>
    
    <item>
      <title>Webentwicklung Mit Angular, Signalr Und ASP.NET Core</title>
      <link>https://offering.solutions/talks/webentwicklung-mit-angular-signalr-und-asp-net-core-53/</link>
      <pubDate>Tue, 01 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/webentwicklung-mit-angular-signalr-und-asp-net-core-53/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Consuming a REST API with Angular Http-Service in Typescript</title>
      <link>https://offering.solutions/blog/articles/2016/02/01/consuming-a-rest-api-with-angular-http-service-in-typescript/</link>
      <pubDate>Mon, 01 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2016/02/01/consuming-a-rest-api-with-angular-http-service-in-typescript/</guid>
      <description>Updates  19.09.2018 - Updated Angular Syntax 19.08.2017 - Updated to ASP.NET Core 2.0 &amp;amp; new HttpClientModule  blog post Hey,
with this blog pot I want to show you how to create a dataservice to consume (not only) an ASP.NET REST API with the angular http module.
In my recent blog post Getting started with Visual Studio Code, AngularJS and Typescript I have already mentioned how to start and to install the complete angular environment with corresponding tools.</description>
    </item>
    
    <item>
      <title>Angular and ASP.NET Core Starter</title>
      <link>https://offering.solutions/blog/articles/2016/01/25/angular-and-asp.net-core-starter/</link>
      <pubDate>Mon, 25 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/blog/articles/2016/01/25/angular-and-asp.net-core-starter/</guid>
      <description>With this bIog I want to give you an Angular and ASP.NET Core Starter.
Code here:
https://github.com/FabianGosebrink/ASPNETCore-Angular-Webpack-StarterTemplate
Updated to the newest Versions
Nowadays you hear a lot of new technologies around the web stuff and with this post I want to show you a get-starting-guide how to start with the following technologies in general. I want to show how to set up an environment where you can start programming ASP.NET and Angular.</description>
    </item>
    
    <item>
      <title>AngularJs &amp; Rest/webapi (with X-Platform Development)</title>
      <link>https://offering.solutions/talks/angularjs-rest-webapi-with-x-platform-development-54/</link>
      <pubDate>Wed, 13 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/angularjs-rest-webapi-with-x-platform-development-54/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Webentwicklung Mit AngularJs &amp; Rest/webapi</title>
      <link>https://offering.solutions/talks/webentwicklung-mit-angularjs-rest-webapi-55/</link>
      <pubDate>Thu, 29 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/webentwicklung-mit-angularjs-rest-webapi-55/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Webentwicklung Mit ASP.NET &amp; AngularJs</title>
      <link>https://offering.solutions/talks/webentwicklung-mit-asp-net-angularjs-56/</link>
      <pubDate>Thu, 23 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/webentwicklung-mit-asp-net-angularjs-56/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Webentwicklung Mit ASP.NET &amp; AngularJs</title>
      <link>https://offering.solutions/talks/webentwicklung-mit-asp-net-angularjs-57/</link>
      <pubDate>Thu, 19 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/talks/webentwicklung-mit-asp-net-angularjs-57/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
