<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Angular &amp; .NET Core Trainings on Fabian Gosebrink Angular and .NET Core Consulting, Training and Courses</title>
    <link>https://offering.solutions/trainings/</link>
    <description>Recent content in Angular &amp; .NET Core Trainings on Fabian Gosebrink Angular and .NET Core Consulting, Training and Courses</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 07 Mar 2021 22:27:21 -0500</lastBuildDate><atom:link href="https://offering.solutions/trainings/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Angular Advanced Workshop</title>
      <link>https://offering.solutions/trainings/angular-advanced/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/trainings/angular-advanced/</guid>
      <description>This course is the continuation of our Angular Beginner Course. Anyone who has visited this or has already taken the first steps with beginner Angular / Typescript is here repealed.
You have been working with Angular for some time and have deep experience with the framework. You master basic concepts such as dependency injection, components and services and use Angular every day. You would like to develop yourself and your project, but books and articles are not enough for you - you want to discuss specific approaches directly with experts and find the best solution.</description>
    </item>
    
    <item>
      <title>Angular Architecture with NX Workshop</title>
      <link>https://offering.solutions/trainings/angular-architecture-with-nx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/trainings/angular-architecture-with-nx/</guid>
      <description>To build up scalable, maintainable and extendable architectures with an Angular application working with a nx workspace is the best option to use.
Nx supports you breaking your application into different parts, reducing the complexity and increasing the maintainability of your application over the whole.
In this workshop you will learn how to set up your Nx workspace right with the tools you need, using the frameworks which are built in and how to set up and get your Angular Application into shape.</description>
    </item>
    
    <item>
      <title>Angular Basics Workshop</title>
      <link>https://offering.solutions/trainings/angular-basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/trainings/angular-basics/</guid>
      <description>You want to leave the jQuery world behind you? Look no further because we have got you covered. In this course you will learn to create Angular applications from scratch.
 Introduction to Typescript Introduction to Angular CLI Bootstrapping your Application Creating independent web components Architecture with modules Databinding Component Communication Lifecycle hooks Pipes Forms &amp;amp; Validation Routing &amp;amp; Parameters Services Dependency Injection Server communication with HTTP Observables  If you are interested, drop us a line below</description>
    </item>
    
    <item>
      <title>Angular Testing Workshop</title>
      <link>https://offering.solutions/trainings/angular-testing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://offering.solutions/trainings/angular-testing/</guid>
      <description>This course is a journey through testing with Angular tools and best practices. With the Angular CLI&amp;rsquo;s built in testing tools like Karma and Jasmine the varieties of components and service testing are explored. As a comparison Jest is also used to perform unit tests. To wrap up this course Cypress is used to perform end-to-end testing to ensure the current state-of-the-art.
Testing will be prepared for:
 (Async) Pipes Sync/Async and HTTP Services Routing Directives Components with Inline Templates Components with external Templates Components with Input()/Output() Decorators Nested Components End to End Testing &amp;hellip;  If you are interested, drop us a line below</description>
    </item>
    
  </channel>
</rss>
